version: 2.1
orbs:
  docker: circleci/docker@1.0.1

commands:
  build_image:
    parameters:
      repo:
        type: string
      tag:
        type: string
      dockerfile:
        type: string
    description: "build a docker image"
    steps:
      - docker/build:
          tag: "<< parameters.tag >>"
          image: "<< parameters.repo >>"
          dockerfile: "<< parameters.dockerfile >>"
  test_go:
    parameters:
      path:
        type: string
    description: "run several test on a go package"
    steps:
      - run: go get golang.org/x/lint                        # Linter
      - run: go get honnef.co/go/tools/cmd/staticcheck       # Badass static analyzer/linter

      - run: "GO_FILES=$(find ./<< parameters.path >> -iname '*.go' -type f | grep -v /vendor/)" # All the .go files, excluding vendor/

      - run: test -z $(gofmt -s -l $GO_FILES)                     # Fail if a .go file hasn't been formatted with gofmt
      - run: "go test $(go list ./<< parameters.path >>/...)"       # Run all tests
      - run: "go vet ./<< parameters.path >>/..."                   # go vet is the official Go static analyzer
      - run: "staticcheck $(go list ./<< parameters.path >>/...)"   # one last linter
  build_go_package:
    parameters:
      path:
        type: string
    description: "build a go package"
    steps:
      - run: "cd ../<< parameters.path >> && go build)"

jobs:
  go-compiler-test:
    docker:
      - image: circleci/golang:1.15.3

    working_directory: /go/src/github.com/Neirpyc/cfimager
    steps:
      - checkout
      - test_go:
          path: compiler

  go-compilerSpawner-test:
    docker:
      - image: circleci/golang:1.15.3

    working_directory: /go/src/github.com/Neirpyc/cfimager
    steps:
      - checkout
      - test_go:
          path: compilerSpawner

  go-mailer-test:
    docker:
      - image: circleci/golang:1.15.3

    working_directory: /go/src/github.com/Neirpyc/cfimager
    steps:
      - checkout
      - test_go:
          path: mailer

  go-server-test:
    docker:
      - image: circleci/golang:1.15.3

    working_directory: /go/src/github.com/Neirpyc/cfimager
    steps:
      - checkout
      - test_go:
          path: server/src

  c-test:
    docker:
      - image: emscripten/emsdk:2.0.4

    working_directory: /src
    steps:
      - checkout
      - run: |
          cd compiler/core &&
          make cfimager.js &&
          make test



  build_go:
    docker:
      - image: circleci/golang:1.15.3
    steps:
      - setup_remote_docker
      - checkout

      - build_go_package:
          path: compilerSpawner
      - build_image:
          repo: neirpyc/cfimager
          tag: latest
          dockerfile: compilerSpawner/Dockerfile

      - build_go_package:
          path: mailer
      - build_image:
          repo: neirpyc/cfimager
          tag: latest
          dockerfile: mailer/Dockerfile

      - build_go_package:
          path: server
      - build_image:
          repo: neirpyc/cfimager
          tag: latest
          dockerfile: server/Dockerfile

  build_c:
    docker:
      - image: emscripten/emsdk:2.0.4

    steps:
      - setup_remote_docker
      - checkout
      - build_image:
          repo: neirpyc/cfimager
          tag: latest
          dockerfile: compiler/core/Dockerfile

workflows:
  version: 2

  test:
    jobs:
      - go-compiler-test
      - go-compilerSpawner-test
      - go-mailer-test
      - go-server-test
      - c-test

  deploy:
    jobs:
      - build_go:
          context:
            - DOCKER_CREDS
      - build_c:
          context:
            - DOCKER_CREDS
